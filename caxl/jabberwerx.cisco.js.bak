/**
*
* Copyrights
*
* Portions created or assigned to Cisco Systems, Inc. are
* Copyright (c) 2010 Cisco Systems, Inc.  All Rights Reserved.
*/
/*build/dist/CAXL-release-2014.04.10787/src/jabberwerx.cisco.js*/
;(function(jabberwerx){jabberwerx.cisco={version:'2014.04.0',_config:{},_init:function(){jabberwerx._config.cisco=jabberwerx.$.extend(true,{},this._config);this._inited=true;}};jabberwerx.$.extend(jabberwerx.xhtmlim.allowedTags,{caption:["style"],table:["style","border","cellpadding","cellspacing","frame","summary","width"],td:["style","align","char","charoff","valign","abbr","axis","colspan","headers","rowspan","scope"],th:["style","abbr","axis","colspan","headers","rowspan","scope"],tr:["style","align","char","charoff","valign"],col:["style","align","char","charoff","valign","span","width"],colgroup:["style","align","char","charoff","valign","span","width"],tbosy:["style","align","char","charoff","valign"],thead:["style","align","char","charoff","valign"],tfoot:["style","align","char","charoff","valign"]});jabberwerx.cisco._init();})(jabberwerx);
/*build/dist/CAXL-release-2014.04.10787/src/cupha.js*/
;(function(jabberwerx){function __log(msg){jabberwerx.util.debug.log("[jabberwerx.cisco.cupha]: "+msg);};var CUPHA_PREFIX="caxl::";function __checkStore(){if(!jabberwerx.$.jStore||!jabberwerx.$.jStore.isReady||!jabberwerx.$.jStore.CurrentEngine.isReady){throw new jabberwerx.util.JWStorageRequiresjQueryjStoreError();}};function __storeNodeInfo(key,value){__checkStore();value=CUPHA_PREFIX+value;jabberwerx.$.jStore.store(key,value);};function __removeNodeInfo(key){__checkStore();jabberwerx.$.jStore.remove(key);};function __getNodeInfo(key){__checkStore();var value=jabberwerx.$.jStore.store(key);if(typeof(value)=="string"){value=value.substring(CUPHA_PREFIX.length,value.length);}else{value=null;}
	return value;};jabberwerx.cisco.cupha={_getPersistedNodes:function(jid){var result={home:undefined,backup:undefined};try{jid=jid&&jabberwerx.JID.asJID(jid).getBareJIDString();result.home=__getNodeInfo('_jw_store_.cup.sd.home.'+jid)||null;result.backup=__getNodeInfo('_jw_store_.cup.sd.backup.'+jid)||null;}catch(ex){__log("Could not fetch persisted node information from localstorage.");}
	__log("Stored home node is: "+result.home);__log("Stored backup node is: "+result.backup);return result;},_setPersistedNodes:function(jid,nodes){var home=(nodes&&nodes.home)||null;var backup=(nodes&&nodes.backup)||null;jid=(jid&&jabberwerx.JID.asJID(jid).getBareJIDString())||null;if(jid){try{__removeNodeInfo('_jw_store_.cup.sd.home.'+jid);__removeNodeInfo('_jw_store_.cup.sd.backup.'+jid);if(home){__storeNodeInfo('_jw_store_.cup.sd.home.'+jid,home);}
	if(backup){__storeNodeInfo('_jw_store_.cup.sd.backup.'+jid,backup);}}catch(ex){__log("Could not persist home and backup nodes: "+ex.message);}}},_parseURL:function(url){var result={original:url,protocol:"",host:"",hostname:"",port:"",path:"",cupNode:"",cupDomain:"",isIP:false}
		if(!url){return result;}
		var purl=jabberwerx.Stream.URL_PARSER.exec(url);if(!purl){return result;}
		result.protocol=purl[1]||"";result.path=purl[3]||"";result.host=purl[2]||"";if(result.host){result.isIP=jabberwerx.cisco.cupha.IPv4_PATTERN.test(result.host);if(result.isIP){var parts=result.host.split(':');if(parts.length>1){result.hostname=parts[0];result.port=parts[1];}else{result.hostname=result.host;}}else{result.isIP=!jabberwerx.cisco.cupha.DNS_HOST_PATTERN.test(result.host);if(result.isIP){jabberwerx.util.debug.warn("CUPHA: Assuming '"+result.host+"' is an IPv6 address. If this is not an IPv6 address there is likely a configuration issue.");}else{var parts=result.host.split(':');if(parts.length>1){result.hostname=parts[0];result.port=parts[1];}else{result.hostname=result.host;}
		parts=result.hostname.split(".");if(parts.length==1){result.cupNode=parts[0];}else if(parts.length==2){result.cupDomain=parts.join(".");}else{result.cupNode=parts[0];parts=parts.slice(1);result.cupDomain=parts.join(".");}}}}
		return result;},_buildURL:function(purl){var retstr=purl.protocol+(purl.protocol?"//":"");if(purl.isIP){if(purl.hostname){retstr+=purl.hostname;retstr+=(purl.port?":":"")+purl.port;}else{retstr+=purl.host;}}else{if(!purl.cupNode&&!purl.cupDomain){retstr+=purl.hostname;}else{retstr+=(purl.cupNode+((purl.cupNode&&purl.cupDomain)?".":"")+purl.cupDomain);}
		retstr+=(purl.port?":":"")+purl.port;}
	retstr+=(purl.path?"/":"")+purl.path;return retstr;},_computeURL:function(sdURL,node){var result="";if(!node){result=sdURL;}else{sdURL=jabberwerx.cisco.cupha._parseURL(sdURL);node=jabberwerx.cisco.cupha._parseURL(node);if((!sdURL.protocol&&!sdURL.host&&sdURL.path)&&(!node.protocol&&!node.isIP&&!node.path)){result="/"+node.original;}
		else if(!node.protocol&&!node.host&&node.path){result=node.original;}else{if(node.isIP||sdURL.isIP){sdURL.isIP=node.isIP;if(node.hostname){sdURL.hostname=node.hostname;}else{sdURL.host=node.host;sdURL.hostname=sdURL.port="";}
		sdURL.cupNode=sdURL.cupDomain="";}else if((sdURL.cupDomain&&node.cupDomain&&sdURL.cupDomain.indexOf(node.cupDomain,sdURL.cupDomain.length-node.cupDomain.length)!==-1)||(node.cupNode&&!node.cupDomain))
			{sdURL.cupNode=node.cupNode;}
		result=jabberwerx.cisco.cupha._buildURL(sdURL);}}
		return result;},_newCUPHA:function(cparams,jid){var cupha={enabled:false,primarySD:null,attemptedPrimarySD:false,secondarySD:null,currentSD:undefined,homeNode:undefined,backupNode:undefined,currentNode:undefined,currentURL:undefined}
		cupha.enabled=(cparams&&cparams.sdEnabled)||false;if(cupha.enabled){cupha.primarySD=cparams.httpBindingURL;cupha.secondarySD=cparams.httpBindingURL_secondary||null;var pnodes=jabberwerx.cisco.cupha._getPersistedNodes(jid);cupha.homeNode=pnodes.home;cupha.backupNode=pnodes.backup;if(cupha.homeNode){cupha.currentNode=cupha.homeNode;}else if(cupha.backupNode){cupha.currentNode=cupha.backupNode;}else{cupha.currentNode=null;}
			if(cupha.primarySD){cupha.currentSD=cupha.primarySD;}else if(cupha.secondarySD){cupha.currentSD=cupha.secondarySD;}else{cupha.currentSD=null;}}
			return cupha;},_httpBindingURL:function(cupha){cupha.currentURL=jabberwerx.cisco.cupha._computeURL(cupha.currentSD,cupha.currentNode);return cupha.currentURL;},_resetToPrimary:function(cupha){cupha.currentNode=cupha.homeNode=cupha.backupNode=null;cupha.currentSD=cupha.primarySD;cupha.attemptedPrimarySD=false;},_updateOnDisconnect:function(cupha){var curl=jabberwerx.cisco.cupha._computeURL(cupha.currentSD,cupha.currentNode);if(cupha.currentURL!=curl)
				{__log("Retrying current node ["+cupha.currentNode+"]");cupha.currentURL=curl;return true;}
				if((cupha.currentNode!==null)&&(cupha.currentNode==cupha.homeNode)&&cupha.backupNode)
				{__log("Failed to connect home node ["+cupha.homeNode+"], and now try backup node ["+cupha.backupNode+"]");cupha.currentNode=cupha.backupNode;cupha.currentURL=jabberwerx.cisco.cupha._computeURL(cupha.currentSD,cupha.currentNode);return true;}
				cupha.currentNode=null;if(!cupha.attemptedPrimarySD)
				{cupha.attemptedPrimarySD=true;cupha.currentSD=cupha.primarySD;cupha.currentNode=null;__log("Both home and backup node are down, retrying the SD-Primary node, Service Discovery URL ="+cupha.currentSD);cupha.currentURL=jabberwerx.cisco.cupha._computeURL(cupha.currentSD,cupha.currentNode);return true;}
				if((cupha.currentSD==cupha.primarySD)&&cupha.secondarySD&&(cupha.secondarySD!=cupha.primarySD))
				{cupha.currentSD=cupha.secondarySD;__log("Failed to connect to SD-Primary nodes, trying SD-Secondary: "+cupha.currentSD);cupha.currentURL=jabberwerx.cisco.cupha._computeURL(cupha.currentSD,cupha.currentNode);return true;}
				__log("Could not connect to primary and secondary Service Discovery servers. Try again later.");return false;},_updateUserNodes:function(cupha,feats,jid){jid=jabberwerx.JID.asJID(jid);var hosts=[];if(feats){jabberwerx.$(feats).find("mechanisms[xmlns='urn:ietf:params:xml:ns:xmpp-sasl']>hostname").each(function(){hosts.push(jabberwerx.$(this).text());});}
				if(hosts.length===0){jabberwerx.util.debug.warn("CUP HA: High Availablility information not returned from Service Discovery server.");__log("No user's home and backup node returned from server, this might be caused by");__log("1) CUP Server is running a pre CUP 8.5 version & does not support High Availability or");__log("2) High Availability may be disabled on the cluster or");__log("3) User is not assigned to a node within the subcluster.");cupha.homeNode=cupha.backupNode=null;cupha.currentNode=null;jabberwerx.cisco.cupha._setPersistedNodes(jid);return false;}
				cupha.homeNode=hosts[0];cupha.backupNode=hosts[1]||null;jabberwerx.cisco.cupha._setPersistedNodes(jid,{home:cupha.homeNode,backup:cupha.backupNode});__log("User ["+jid.getBareJIDString()+"]'s home node is "+cupha.homeNode+" and backup node is "+cupha.backupNode);var homeURL=jabberwerx.cisco.cupha._computeURL(cupha.currentSD,cupha.homeNode);var backupURL=jabberwerx.cisco.cupha._computeURL(cupha.currentSD,cupha.backupNode);var isHome=(cupha.currentURL==homeURL);if(isHome||(cupha.currentURL==backupURL))
				{__log("Already connecting to user's "+(isHome?"home":"backup")+" node: "+cupha.currentURL);return false;}
				cupha.currentNode=cupha.homeNode;cupha.currentURL=jabberwerx.cisco.cupha._computeURL(cupha.currentSD,cupha.currentNode);__log("Reopening stream after updating user nodes");return true;}};jabberwerx.cisco.cupha.ClientMixin={_reopenStream:function(){this._clearStreamHandlers();this._stopReceiveQueue(true);if(this._stream.isOpen()){this._setStreamHandler('streamClosed','_handleClosedDuringReopen');try{this._stream.close();}catch(e){__log("Exception during _reopenStream, ignoring: "+e.message);setTimeout(this.invocation('_openStream'),10);}}else{setTimeout(this.invocation('_openStream'),10);}},_handleClosedDuringReopen:function(){this._clearStreamHandler("streamClosed");setTimeout(this.invocation('_openStream'),10);},_newConnectParams:function(jid,password,arg){var result=this._super(jid,password,arg);result.sdEnabled=(arg.serviceDiscoveryEnabled==="true")||(jabberwerx._config.serviceDiscoveryEnabled==="true");result.httpBindingURL_secondary=arg.httpBindingURL_secondary||jabberwerx._config.httpBindingURL_secondary||"";result.bindRetryCountdown=arg.bindRetryCountdown||jabberwerx._config.bindRetryCountdown;result.bindRetryCountdown=Number(result.bindRetryCountdown);if(result.bindRetryCountdown<=0){result.bindRetryCountdown=jabberwerx.cisco.cupha.DEFAULT_CONNECTION_TIMEOUT;}
					if(!result.arg.reconnecting){__log("CUP High-Availability features are "+(result.sdEnabled?"enabled":"disabled"));if(!result.sdEnabled){result.arg.cupha=jabberwerx.cisco.cupha._newCUPHA();}else{result.arg.cupha=jabberwerx.cisco.cupha._newCUPHA(result,jid);}}
						return result;},_filterStreamOpts:function(cparams){var result=this._super(cparams);if(cparams.sdEnabled){result.httpBindingURL=jabberwerx.cisco.cupha._httpBindingURL(cparams.arg.cupha);__log("BOSH URL is: "+result.httpBindingURL);}
					return result;},_handleAuthOpened:function(feats){if(!this._connectParams.sdEnabled||!jabberwerx.cisco.cupha._updateUserNodes(this._connectParams.arg.cupha,feats.data,this._connectParams.jid))
						{this._super(feats);}else{try{this._reopenStream();}catch(ex){this._handleConnectionException(ex);}}},_handleClosed:function(err){if(this._connectParams.sdEnabled&&err&&err.data&&!this._connectParams.arg.register&&(this.clientStatus==jabberwerx.Client.status_connecting))
							{if(this._connectParams.bindResourceTimer!==undefined){jabberwerx.system.clearTimeout(this._connectParams.bindResourceTimer);delete this._connectParams.bindResourceTimer;}
								if(jabberwerx.cisco.cupha._updateOnDisconnect(this._connectParams.arg.cupha))
							{try{this._reopenStream();return;}catch(ex){__log("Unhandled exception trying to reopen the stream during reconnection attempt: "+ex.message);}}}
								this._super(err);},_handleBindOpened:function(feats){if(this._connectParams.sdEnabled){this._connectParams.bindResourceTimer=jabberwerx.system.setTimeout(this.invocation("_handleBindTimeout"),this._connectParams.bindRetryCountdown*1000);}
								this._super(feats);},_handleBindElements:function(elements){if(this._connectParams.bindResourceTimer!==undefined){jabberwerx.system.clearTimeout(this._connectParams.bindResourceTimer);delete this._connectParams.bindResourceTimer;}
								this._super(elements);},_handleBindTimeout:function(){delete this._connectParams.bindResourceTimer;try{__log("No response from binding resource request, reopen the stream....");if(jabberwerx.cisco.cupha._updateOnDisconnect(this._connectParams.arg.cupha)){this._reopenStream();}else{__log("No nodes or service discovery servers left to try. Failing connection attempt.");this._handleConnectionException(jabberwerx.Stream.ERR_SERVICE_UNAVAILABLE);}}catch(ex){jabberwerx.util.debug.warn("CUPHA _handleBindTimeout threw an unhandled exception while attempting to reopen stream: "+ex.message);this._handleConnectionException(ex);}},_disconnected:function(err){if(!this._connectParams.sdEnabled){this._super(err);return;}
									if(this._connectParams.bindResourceTimer!==undefined){jabberwerx.system.clearTimeout(this._connectParams.bindResourceTimer);delete this._connectParams.bindResourceTimer;}
									if(err){var changeNode=(this.clientStatus==jabberwerx.Client.status_reconnecting);changeNode=changeNode||(jabberwerx.$("system-shutdown",err).length!==0);changeNode=changeNode||(jabberwerx.$("see-other-host",err).length!=0);}
									this._super(err);if(this._countDownOn==0){this._connectParams.arg.cupha=jabberwerx.cisco.cupha._newCUPHA();}else if((this._countDownOn!=0)&&changeNode){if(!jabberwerx.cisco.cupha._updateOnDisconnect(this._connectParams.arg.cupha)){jabberwerx.cisco.cupha._resetToPrimary(this._connectParams.arg.cupha);}
									__log("Connection failed, and now try : "+jabberwerx.cisco.cupha._httpBindingURL(this._connectParams.arg.cupha)+" in "+this._countDownOn+" seconds.");}else{__log("Reconnect to the last connected node: "+jabberwerx.cisco.cupha._httpBindingURL(this._connectParams.arg.cupha)+" in "+this._countDownOn+" seconds.");}},_shouldReconnect:function(err){return this._super(err)||(this._connectParams.sdEnabled&&((jabberwerx.$("see-other-host",err).length!=0)||(jabberwerx.$("system-shutdown",err).length!=0)));}};jabberwerx.cisco.cupha.DEFAULT_CONNECTION_TIMEOUT=30;jabberwerx.cisco.cupha.IPv4_PATTERN=/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(?:(\:[0-9]*))*$/,jabberwerx.cisco.cupha.DNS_HOST_PATTERN=/^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])(?:(\:[0-9]*))*$/;jabberwerx.Client.intercept(jabberwerx.cisco.cupha.ClientMixin);jabberwerx.$.extend(true,jabberwerx._config,{serviceDiscoveryEnabled:false,httpBindingURL_secondary:"/httpbinding",bindRetryCountdown:jabberwerx.cisco.cupha.DEFAULT_CONNECTION_TIMEOUT});})(jabberwerx);
										/*build/dist/CAXL-release-2014.04.10787/src/controller/DirectoryGroupsController.js*/
										;(function(jabberwerx){jabberwerx.cisco.DirectoryGroupsController=jabberwerx.Controller.extend({searchID:100,init:function(client){this._super(client,'directory');this.pubsubController=client.controllers.pubsub||new jabberwerx.PubSubController(client);this.discoController=client.controllers.disco||new jabberwerx.DiscoController(client);this.client=client;this.applyEvent('LDAPContactAdded');this.applyEvent('LDAPContactRemoved');this.applyEvent('LDAPGroupRemoved');this.applyEvent('LDAPGroupNameUpdated');this.applyEvent('LDAPGroupSearchResults');this.applyEvent('LDAPUserSearchResults');this._ldapContacts={};this._ldapGroups={};this._itemsBuff=[];this._subcrbItemsBuff=[];client.event("clientDisconnected").bind(this.invocation("_onClientDisconnected"));},destroy:function(){this.client.event("clientDisconnected").unbind(this.invocation("_onClientDisconnected"));this._super();},activateSubscriptions:function(){jabberwerx.util.debug.log("activateSubscriptions","","");if(!this._hasLDAPFeature()){throw new this.errors.ActiveGroupServerFailedError();}
											var groupServerHost=this._getGroupServerHost();this.client.event('messageReceived').bindWhen("message[from='"+groupServerHost+"'] event[xmlns='http://jabber.org/protocol/pubsub#event']",this.invocation("_onLdapGroupReceived"));var activate=new jabberwerx.Presence();activate.setTo(groupServerHost);new jabberwerx.NodeBuilder(activate.getNode()).element('{http://webex.com/connect/cs}x',{'type':'initial'});this.client.sendStanza(activate);},_hasLDAPFeature:function(){return this.discoController.findByFeature('http://webex.com/connect/cs').length>0;},_cacheLdapContact:function(groupId,jid){var group=this._ldapContacts[groupId];if(!group){group=this._ldapContacts[groupId]={};}
											group[jid]=true;},_cacheLdapGroups:function(groupId,groupName){this._ldapGroups[groupId]=groupName;},isLDAPContact:function(jid){for(var i in this._ldapContacts){var group=this._ldapContacts[i];if(group[jid]){return true;}}
											return false;},_onClientDisconnected:function(err){this._ldapContacts={};this._ldapGroups={};delete this.groupServerHost;},_onLdapGroupReceived:function(stanza){var node=jabberwerx.$(stanza.data);var groupItem=jabberwerx.$("items",node[0]._DOM);if(groupItem.length>0){this._updateLdapGroup(groupItem);}
										var delGroupItem=jabberwerx.$("delete",node[0]._DOM);if(delGroupItem.length>0){this._deleteLdapGroup(delGroupItem);}},_updateLdapGroup:function(groups){for(var i=0,groupItem,l=groups.length;i<l;i++){groupItem=jabberwerx.$(groups[i]);var groupid=groupItem.attr("node"),groupname=groupItem.attr("name"),items=jabberwerx.$('item',groupItem),retracts=jabberwerx.$('retract',groupItem),member,jid,displayName;if(retracts.length==0&&groupname){this._cacheLdapGroups(groupid,groupname);this.event('LDAPGroupNameUpdated').trigger({groupid:groupid,groupname:groupname});}else if(retracts.length>0){for(var i=0,l=retracts.length;i<l;i++){jid=jabberwerx.$(retracts[i]).attr("id");this.event('LDAPContactRemoved').trigger({jid:jid,groupid:groupid});if(this._ldapContacts[groupid]){delete this._ldapContacts[groupid];}}
										break;}
										if(this._itemsBuff.length===0){var buffIdx=0,itemIdx=0,that=this;var iterateItem=function(){clearTimeout(h);items=that._itemsBuff[buffIdx]||[];groupid=items.length&&items[0].parentNode.getAttribute("node");for(var i=0,l=items.length;itemIdx<l;itemIdx++,i++){if(i>100){break;}
										member=jabberwerx.$("member",items[itemIdx]);jid=member.attr("username");displayName=member.attr("displayname");that._cacheLdapContact(groupid,jid);that.event('LDAPContactAdded').trigger({jid:jid,groupid:groupid,displayName:displayName});}
											if(itemIdx==items.length){itemIdx=0;buffIdx++;}
											if(that._itemsBuff.length>buffIdx){h=setTimeout(arguments.callee,100);}else{that._itemsBuff=[];}}
										var h=setTimeout(iterateItem,500);}
										this._itemsBuff.push(items);}},_deleteLdapGroup:function(groupItem){for(var i=0,groupid,item,l=groupItem.length;i<l;i++){item=jabberwerx.$(groupItem[i]);groupid=item.attr("node");this.event('LDAPGroupRemoved').trigger({groupid:groupid});}},_getGroupServerHost:function(){if(!this.groupServerHost){this.discoController=this.client.controllers.disco;if(!this.discoController){throw this.errors.NoGroupAddressError;}
									var entities=this.discoController.findByIdentity("component/generic");for(var i=0,l=entities.length;i<l;i++){if(entities[i].hasFeature("http://webex.com/connect/cs")){this.groupServerHost=entities[i].jid.toString();break;}}}
									return this.groupServerHost;},searchGroup:function(groupName,count){var groupServerHost=this._getGroupServerHost();var query=new jabberwerx.NodeBuilder('{jabber:iq:search}query').element('{jabber:x:data}x',{'type':'submit'});query.element('field',{'type':'hidden','var':'FORM_TYPE'}).element('value').text('http://webex.com/connect/cs');query.element('field',{'var':'groupname'}).element('value').text(groupName);query.element('field',{'var':'count'}).element('value').text(count);var resultId=++this.searchID;var that=this;this.client.sendIq("set",groupServerHost,query.document,function(stanza){var items=jabberwerx.$('item',stanza);var ldapGroups=[];for(var i=0;i<items.length;i++){var item={};var fields=jabberwerx.$("field",items[i]);for(var j=0;j<fields.length;j++){var field=fields[j];var name=jabberwerx.$(field).attr("var");if(name=="groupid"||name=="groupname"){var value=jabberwerx.$('value',field).text();item[name]=value;}}
									ldapGroups.push(item);that._cacheLdapGroups(item['groupid'],item['groupname']);}
								that.event('LDAPGroupSearchResults').trigger({resultid:resultId,ldapGroups:ldapGroups});});return this.searchID;},searchUsersByFields:function(searchFields,count){if(!count&&count>0){searchFields["count"]=count;}
									return this._searchUsers(searchFields,count);},_searchUsers:function(searchArgs,count){var groupServerHost=this._getGroupServerHost();var query=new jabberwerx.NodeBuilder('{jabber:iq:search}query').element('{jabber:x:data}x',{'type':'submit'});query.element('field',{'type':'hidden','var':'FORM_TYPE'}).element('value').text('http://webex.com/connect/cs');for(var arg in searchArgs){query.element('field',{'var':arg}).element('value').text(searchArgs[arg]);}
									var that=this;var resultId=++this.searchID;this.client.sendIq("set",groupServerHost,query.document,function(stanza){var items=jabberwerx.$('item',stanza);var ldapUsers=[];for(var i=0;i<items.length;i++){var item={};var fields=jabberwerx.$("field",items[i]);for(var j=0;j<fields.length;j++){var field=fields[j];var name=jabberwerx.$(field).attr("var");if(name=="email"||name=="username"||name=="jobtitle"||name=="displayname"||name=="phone"){var value=jabberwerx.$('value',field).text();item[name]=value;}}
									ldapUsers.push(item);}
									that.event('LDAPUserSearchResults').trigger({resultid:resultId,ldapUsers:ldapUsers});});return this.searchID;},subscribeGroup:function(groupId){var groupServerHost=this._getGroupServerHost();var groupNode=this.pubsubController.node(groupId,groupServerHost);var that=this;groupNode.event("pubsubItemsChanged").bind(this.invocation("_onSubscribeGroup"));groupNode.subscribe(function(){var groupName=that._ldapGroups[groupId];that.event('LDAPGroupNameUpdated').trigger({groupid:groupId,groupname:groupName});});},_onSubscribeGroup:function(groupObj){if(this._subcrbItemsBuff.length===0){var groupId=groupObj.source.node;var that=this;var iterateItem=function(){clearTimeout(h);var groupObj=that._subcrbItemsBuff.shift();var groupId=groupObj.source.node;var items=groupObj.data.items;for(var i=0;i<items.length;i++){var item=items[i];var displayName=jabberwerx.$(item.data).attr("displayname");var jid=jabberwerx.$(item.data).attr("username");that._cacheLdapContact(groupId,jid);that.event('LDAPContactAdded').trigger({jid:jid,groupid:groupId,displayName:displayName});}
									var groupServerHost=that._getGroupServerHost();var groupNode=that.pubsubController.node(groupId,groupServerHost);groupNode.destroy();if(that._subcrbItemsBuff.length>0){h=setTimeout(arguments.callee,100);}};var h=setTimeout(iterateItem,10);}
									this._subcrbItemsBuff.push(groupObj);},unsubscribeGroup:function(groupId){var groupServerHost=this._getGroupServerHost();var groupNode=this.pubsubController.node(groupId,groupServerHost);var that=this;groupNode.unsubscribe(function(){that.event('LDAPGroupRemoved').trigger({groupid:groupId});});},errors:{ActiveGroupServerFailedError:jabberwerx.util.Error.extend('Can\'t active group subscription.'),NoGroupAddressError:jabberwerx.util.Error.extend('Can\'t get group server address.')}});})(jabberwerx);
										/*build/dist/CAXL-release-2014.04.10787/src/controller/QuickContactController.js*/
										;(function(jabberwerx){jabberwerx.cisco.QuickContactController=jabberwerx.Controller.extend({init:function(client){this._super(client,"quickContact");this.client.event('afterMessageReceived').bindWhen('message[type="headline"] event[xmlns="http://jabber.org/protocol/pubsub#event"] items[node="http://webex.com/connect/temp-presence"]>item>presence',this.invocation('_presenceReceived'));this.client.event("clientStatusChanged").bind(this.invocation("_handleStatusChange"));jabberwerx.globalEvents.bind("resourcePresenceChanged",this.invocation("_handleResourcePresenceUpdate"));this.client.entitySet.event('entityUpdated').bind(this.invocation('_handleEntityUpdated'));this.client.entitySet.event('entityRemoved').bind(this.invocation('_handleEntityRemoved'));},destroy:function(){var client=this.client;client.event("afterMessageReceived").unbind(this.invocation("_presenceReceived"));client.event("clientStatusChanged").unbind(this.invocation("_handleStatusChange"));jabberwerx.globalEvents.unbind("resourcePresenceChanged",this.invocation("_handleResourcePresenceUpdate"));client.entitySet.event('entityUpdated').unbind(this.invocation('_handleEntityUpdated'));client.entitySet.event('entityRemoved').unbind(this.invocation('_handleEntityRemoved'));this._super();},subscribe:function(jid){jid=jabberwerx.JID.asJID(jid).getBareJID();delete this._pendingSubs[jid.toString()];delete this._pendingUnsubs[jid.toString()];var entity=this.client.entitySet.entity(jid);if(entity&&entity instanceof(jabberwerx.RosterContact)&&(entity.properties.subscription=="both"||entity.properties.subscription=="to")){throw new TypeError("Can't add roster contact as a quick contact.");}
											if(!entity||(entity instanceof jabberwerx.TemporaryEntity)){var quick=new jabberwerx.cisco.QuickContact(jid,this);if(entity){quick.apply(entity);entity.remove();entity=quick;}
												entity=quick;entity.properties.temp_sub=true;this.client.entitySet.register(entity);}else{entity.properties.temp_sub=true;this.client.entitySet.event("entityUpdated").trigger(entity);}
												if(!entity.getPrimaryPresence()){var pres=new jabberwerx.Presence();pres.setFrom(entity.jid);pres.setType("unavailable");entity.updatePresence(pres);}
												var retVal=this.client.controllers.capabilities.addFeatureToJid(jid,'http://webex.com/connect/temp-presence+notify');return retVal;},subscribeAll:function(jids,reset){if(!jabberwerx.util.isArray(jids)){throw new TypeError("jids must be an array");}
												if((reset!==undefined)&&reset){var that=this;jabberwerx.$.each(this.client.entitySet.toArray(),function(){if((this.properties.temp_sub!==undefined)&&(!that._pendingUnsubs.hasOwnProperty(this.jid))){that._pendingUnsubs[this.jid]=true;}});}
												for(var i=0;i<jids.length;++i){try{var tjid=jabberwerx.JID.asJID(jids[i]).getBareJIDString();}catch(ex){jabberwerx.util.debug.warn("Skipping "+jids[i]+", could not parse JID");continue;}
													if(this._pendingUnsubs.hasOwnProperty(tjid)){delete this._pendingUnsubs[tjid];}
													var entity=this.client.entitySet.entity(tjid);if(entity&&(entity.properties.temp_sub!==undefined)){continue;}
													if(this._pendingSubs.hasOwnProperty(tjid)){continue;}
												this._pendingSubs[tjid]=true;}
											if(!this._pendingTimer){this._processPending();}},unsubscribe:function(jid){jid=jabberwerx.JID.asJID(jid).getBareJID();delete this._pendingUnsubs[jid.toString()];delete this._pendingSubs[jid.toString()];var retVal=this.client.controllers.capabilities.removeFeatureFromJid(jid,'http://webex.com/connect/temp-presence+notify');var ent=this.client.entitySet.entity(jid);if(ent){if(ent instanceof jabberwerx.cisco.QuickContact){ent.remove();}else{delete ent.properties.temp_sub;if(ent.properties.subscription=="from"||ent.properties.subscription=="none"){ent.updatePresence(null);}
											this.client.entitySet.event("entityUpdated").trigger(ent);}}
											return retVal;},unsubscribeAll:function(jids){if(!jabberwerx.util.isArray(jids)){throw new TypeError("jids must be an array");}
											for(var i=0;i<jids.length;++i){try{var tjid=jabberwerx.JID.asJID(jids[i]).getBareJIDString();}catch(ex){jabberwerx.util.debug.warn("Skipping "+jids[i]+", could not parse JID");continue;}
												if(this._pendingSubs.hasOwnProperty(tjid)){delete this._pendingSubs[tjid];}
												var entity=this.client.entitySet.entity(tjid);if(!entity||(entity.properties.temp_sub===undefined)){continue;}
												if(this._pendingUnsubs.hasOwnProperty(tjid)){continue;}
											this._pendingUnsubs[tjid]=true;}
											if(!this._pendingTimer){this._processPending();}},removeEntity:function(entity){if(!(entity&&entity instanceof jabberwerx.cisco.QuickContact)){throw new TypeError("entity must be a quick contact");}
											var jid=entity.jid;entity.destroy();this.unsubscribe(jid);},cleanupEntity:function(entity){this.client.controllers.capabilities.removeFeatureFromJid(entity.jid,'http://webex.com/connect/temp-presence+notify');entity.remove();},willBeSerialized:function(){if(this._pendingTimer!==undefined){jabberwerx.system.clearInterval(this._pendingTimer);delete this._pendingTimer;}
										this._super();},graphUnserialized:function(){this._super();this._checkTimer();},_handleStatusChange:function(evt){if(evt.data.next==jabberwerx.Client.status_disconnected){this._pendingSubs={};this._pendingUnsubs={};this._checkTimer();}},_presenceReceived:function(eventObj){var presence=jabberwerx.$(eventObj.selected);for(var i=0;i<presence.length;i++){if(presence[i]){var prs=jabberwerx.Stanza.createWithNode(presence[i]);var bareJidStr=prs.getFromJID().getBareJIDString();var entity=this.client.entitySet.entity(bareJidStr);if(!entity){entity=new jabberwerx.cisco.QuickContact(bareJidStr,this);this.client.entitySet.register(entity);}
										entity.updatePresence(prs);}}
										return true;},_handleResourcePresenceUpdate:function(eventObj){var presence=eventObj.data.presence;var nowAvailable=eventObj.data.nowAvailable;var jid=eventObj.data.fullJid;var entity=this.client.entitySet.entity(jid.getBareJID());if(entity&&entity instanceof(jabberwerx.RosterContact)&&entity.properties.subscription!="both"&&entity.properties.subscription!="to"&&nowAvailable){var p=this.client.getCurrentPresence().clone();var item=jabberwerx.$(p.getNode()).find("c[xmlns='http://jabber.org/protocol/caps']");item.remove();p.setTo(entity.jid.getBareJID());this.client.sendStanza(p);}
										return false;},_handleEntityUpdated:function(eventObj){var entity=eventObj.data;if(entity.properties.temp_sub&&entity instanceof jabberwerx.RosterContact){if(entity.properties.subscription=="both"||entity.properties.subscription=="to"){this.unsubscribe(entity.jid);jabberwerx.util.debug.log("removing temp sub property from "+entity.jid);}else if(entity.properties.subscription=="from"){this.client.controllers.capabilities.addFeatureToJid(entity.jid,'http://webex.com/connect/temp-presence+notify');jabberwerx.util.debug.log("resending temp-presence+notify caps to "+entity.jid);}}
											return false;},_handleEntityRemoved:function(eventObj){var entity=eventObj.data;if(entity.properties.temp_sub){if(this.client.isConnected()&&!(entity instanceof jabberwerx.cisco.QuickContact)){var quick=new jabberwerx.cisco.QuickContact(entity.jid,this);quick.apply(entity);this.client.entitySet.register(quick);this.subscribe(quick.jid);}else if(!this.client.isConnected()){this.unsubscribe(entity.jid);}}
											return false;},_processPending:function(){var that=this;var queues=[{queue:this._pendingSubs,func:"subscribe"},{queue:this._pendingUnsubs,func:"unsubscribe"}];var currQueue=0;var sliceCounter=0;var totalSlices=Math.max(1,this.subscriptionSlice);while(sliceCounter<totalSlices&&currQueue<queues.length){for(var oneJID in queues[currQueue].queue){if(queues[currQueue].queue.hasOwnProperty(oneJID)){try{if(!this[queues[currQueue].func].apply(this,[oneJID])){jabberwerx.util.debug.warn(jabberwerx._("{0}({1}) returned false",queues[currQueue].func,oneJID));}}catch(ex){jabberwerx.util.debug.warn(jabberwerx._("{0}({1}) threw exception: {2}",queues[currQueue].func,oneJID,ex.message));}
											if(++sliceCounter==totalSlices){break;}}}
											currQueue++;}
											delete this._pendingTimer;this._checkTimer();},_isEmpty:function(queue){for(var p in queue){if(queue.hasOwnProperty(p)){return false;}}
										return true;},_checkTimer:function(){if(!this._isEmpty(this._pendingSubs)||!this._isEmpty(this._pendingUnsubs)){if(this._pendingTimer===undefined){var that=this;var timerTime=Math.max(0,this.subscriptionInterval)*1000;this._pendingTimer=jabberwerx.system.setTimeout(function(){that._processPending();},timerTime);}}else if(this._pendingTimer){jabberwerx.system.clearTimeout(this._pendingTimer);delete this._pendingTimer;}},_pendingSubs:{},_pendingUnsubs:{},_pendingTimer:undefined,subscriptionInterval:0.5,subscriptionSlice:10},"jabberwerx.cisco.QuickContactController");})(jabberwerx);
											/*build/dist/CAXL-release-2014.04.10787/src/model/QuickContact.js*/
											;(function(jabberwerx){jabberwerx.cisco.QuickContact=jabberwerx.Contact.extend({init:function(jid,quickContactCtrl){if(!(quickContactCtrl&&quickContactCtrl instanceof jabberwerx.cisco.QuickContactController)){throw new TypeError("quickContactCtrl must be provided and must be of type"+"jabberwerx.cisco.QuickContactController");}
											this._super(jid,quickContactCtrl);this.properties.temp_sub=true;},_handleUnavailable:function(presence){var pres=this.getPrimaryPresence();if(!pres){this._insertPresence(presence);}else if(pres.getType()=="unavailable"){this._clearPresenceList();this._insertPresence(presence);}}},'jabberwerx.cisco.QuickContact');})(jabberwerx);